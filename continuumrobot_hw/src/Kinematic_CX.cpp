/**
 * @file Kinematic_CX.cpp
 * @brief 连续体机器人运动学：构型空间和末端工作空间
 * 
 * @author Zhang Xu (tjuzx2016@126.com)
 * @date 2022-03-29
 * 
 * @copyright Copyright (c) 2022 Key Laboratory of Mechanism Theory and Equipment Design of the Ministry of Education, School of Mechanical Engineering, Tianjin University, China
 */

#include <math.h>
#include <continuumrobot_hw/Kinematic_CX.h>

#define pi M_PI

Kinematic_CX::Kinematic_CX(double L[3]){
    L1 = L[0];
    L2 = L[1];
    L3 = L[2];
}

VectorXd Kinematic_CX::GetX(VectorXd Configuration){
    Matrix4d T = GetTransformMatrix(Configuration);
    VectorXd X(9);
    X(0) = T(0,0);
    X(1) = T(1,0);
    X(2) = T(2,0);
    X(3) = T(0,1);
    X(4) = T(1,1);
    X(5) = T(2,1);
    X(6) = T(0,3);
    X(7) = T(1,3);
    X(8) = T(2,3);
    return X;

}

Matrix4d Kinematic_CX::GetTransformMatrix(VectorXd Configuration){
    Matrix4d T;

    double theta1 = Configuration[0];
    double psi1 = Configuration[1];
    double theta2 = Configuration[2];
    double psi2 = Configuration[3];
    double theta3 = Configuration[4];
    double psi3 = Configuration[5];

    double T1_1 = (cos(theta3)*pow(cos(psi3),2) + pow(sin(psi3),2))*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2)) + (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*((pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - cos(psi3)*sin(theta3)*(cos(psi2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) - sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi1)*cos(theta2)*sin(theta1));
    double T2_1 = - (cos(theta3)*pow(cos(psi3),2) + pow(sin(psi3),2))*((cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)) - (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - cos(psi3)*sin(theta3)*(cos(theta2)*sin(psi1)*sin(theta1) + sin(psi2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) - cos(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)));
    double T3_1 = (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*(cos(theta1)*sin(psi2)*sin(theta2) + sin(psi1)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - cos(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))) - (cos(theta3)*pow(cos(psi3),2) + pow(sin(psi3),2))*(cos(psi1)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*cos(theta1)*sin(theta2)) + cos(psi3)*sin(theta3)*(cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2) - cos(theta1)*cos(theta2) + sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2));
    double T1_2 = - (pow(cos(psi3),2) + cos(theta3)*pow(sin(psi3),2))*((pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2)) - sin(psi3)*sin(theta3)*(cos(psi2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) - sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi1)*cos(theta2)*sin(theta1));
    double T2_2 = (pow(cos(psi3),2) + cos(theta3)*pow(sin(psi3),2))*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) + (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*((cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)) - sin(psi3)*sin(theta3)*(cos(theta2)*sin(psi1)*sin(theta1) + sin(psi2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) - cos(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)));
    double T3_2 = (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*(cos(psi1)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*cos(theta1)*sin(theta2)) - (pow(cos(psi3),2) + cos(theta3)*pow(sin(psi3),2))*(cos(theta1)*sin(psi2)*sin(theta2) + sin(psi1)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - cos(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))) + sin(psi3)*sin(theta3)*(cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2) - cos(theta1)*cos(theta2) + sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2));
    double T1_3 = cos(theta3)*(cos(psi2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) - sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi1)*cos(theta2)*sin(theta1)) - sin(psi3)*sin(theta3)*((pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) + cos(psi3)*sin(theta3)*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2));
    double T2_3 = cos(theta3)*(cos(theta2)*sin(psi1)*sin(theta1) + sin(psi2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) - cos(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))) - cos(psi3)*sin(theta3)*((cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)) + sin(psi3)*sin(theta3)*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2));
    double T3_3 = - cos(theta3)*(cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2) - cos(theta1)*cos(theta2) + sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - cos(psi3)*sin(theta3)*(cos(psi1)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*cos(theta1)*sin(theta2)) - sin(psi3)*sin(theta3)*(cos(theta1)*sin(psi2)*sin(theta2) + sin(psi1)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - cos(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)));
    double T1_4 = ((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3)*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2)) - ((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3)*((pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*((L2*cos(psi2))/theta2 - (L2*cos(psi2)*cos(theta2))/theta2) - (cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*((L2*sin(psi2))/theta2 - (L2*cos(theta2)*sin(psi2))/theta2) + (L1*cos(psi1))/theta1 - (L1*cos(psi1)*cos(theta1))/theta1 + (L3*sin(theta3)*(cos(psi2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) - sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi1)*cos(theta2)*sin(theta1)))/theta3 + (L2*cos(psi1)*sin(theta1)*sin(theta2))/theta2;
    double T2_4 = ((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3)*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - ((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3)*((cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*((L2*sin(psi2))/theta2 - (L2*cos(theta2)*sin(psi2))/theta2) - (cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*((L2*cos(psi2))/theta2 - (L2*cos(psi2)*cos(theta2))/theta2) + (L1*sin(psi1))/theta1 - (L1*cos(theta1)*sin(psi1))/theta1 + (L3*sin(theta3)*(cos(theta2)*sin(psi1)*sin(theta1) + sin(psi2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) - cos(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))))/theta3 + (L2*sin(psi1)*sin(theta1)*sin(theta2))/theta2;
    double T3_4 = (L1*sin(theta1))/theta1 - ((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3)*(cos(theta1)*sin(psi2)*sin(theta2) + sin(psi1)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - cos(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))) - sin(psi1)*sin(theta1)*((L2*sin(psi2))/theta2 - (L2*cos(theta2)*sin(psi2))/theta2) - ((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3)*(cos(psi1)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*cos(theta1)*sin(theta2)) - cos(psi1)*sin(theta1)*((L2*cos(psi2))/theta2 - (L2*cos(psi2)*cos(theta2))/theta2) + (L2*cos(theta1)*sin(theta2))/theta2 - (L3*sin(theta3)*(cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2) - cos(theta1)*cos(theta2) + sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)))/theta3;

    T << T1_1,T1_2,T1_3,T1_4,
         T2_1,T2_2,T2_3,T2_4,
         T3_1,T3_2,T3_3,T3_4,
            0,   0,   0,   1;

    return T; 
}

VectorXd Kinematic_CX::GetConfiguration(VectorXd X,VectorXd Configuration_Start){
    VectorXd Configuration_Des(6);
    VectorXd Configuration_Delta(6);
    VectorXd Configuration_Temp(6);

    Matrix<double,9,6> Jacobian;
    Configuration_Temp = Configuration_Start;

    for(int i = 0;i < num_max_iteration;i++){
        Jacobian = GetJacobianCX(Configuration_Temp);//求雅各比矩阵
        Configuration_Delta = pinv(Jacobian)*(X - GetX(Configuration_Temp));//求delta_Configuration        
        Configuration_Temp = Configuration_Temp + Configuration_Delta;
        if(Configuration_Delta.norm() <= 0){
            break;
        }
    }
    

    Configuration_Des = Configuration_Temp;

    return Configuration_Des;
}

Matrix<double,9,6> Kinematic_CX::GetJacobianCX(VectorXd Configuration){
    Matrix<double,9,6> J;

    double theta1 = Configuration[0];
    double psi1 = Configuration[1];
    double theta2 = Configuration[2];
    double psi2 = Configuration[3];
    double theta3 = Configuration[4];
    double psi3 = Configuration[5];

    //避免奇异位姿的出现
    if(theta1==0) theta1 = 0.0001;
    if(theta2==0) theta2 = 0.0001;
    if(theta3==0) theta3 = 0.0001;

    double J1_1 = (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*(cos(psi1)*sin(psi1)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - pow(cos(psi1),2)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*cos(theta1)*sin(psi2)*sin(theta2)) - (cos(theta3)*pow(cos(psi3),2) + pow(sin(psi3),2))*(pow(cos(psi1),2)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - cos(psi1)*sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*cos(psi2)*cos(theta1)*sin(theta2)) + cos(psi3)*sin(theta3)*(pow(cos(psi1),2)*cos(psi2)*sin(theta1)*sin(theta2) - cos(psi1)*cos(theta1)*cos(theta2) + cos(psi1)*sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2));
    double J1_2 = (cos(theta3)*pow(cos(psi3),2) + pow(sin(psi3),2))*((cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2))*(2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1)) + (cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) + cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)) + (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*((2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2))*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) - sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) + cos(psi3)*sin(theta3)*(cos(theta2)*sin(psi1)*sin(theta1) + sin(psi2)*sin(theta2)*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) - cos(psi2)*sin(theta2)*(2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1)));
    double J1_3 = (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*(cos(psi2)*sin(psi2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) - pow(sin(psi2),2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi1)*cos(theta2)*sin(psi2)*sin(theta1)) - (cos(theta3)*pow(cos(psi3),2) + pow(sin(psi3),2))*(pow(cos(psi2),2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) - cos(psi2)*sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi1)*cos(psi2)*cos(theta2)*sin(theta1)) + cos(psi3)*sin(theta3)*(cos(psi1)*sin(theta1)*sin(theta2) - cos(psi2)*cos(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) + cos(theta2)*sin(psi2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)));
    double J1_4 = (cos(theta3)*pow(cos(psi3),2) + pow(sin(psi3),2))*((cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2)) + (cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) + cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) + (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*((cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) - (cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2)) + cos(psi3)*sin(theta3)*(sin(psi2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) + cos(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)));
    double J1_5 = cos(psi3)*sin(psi3)*sin(theta3)*((pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - pow(cos(psi3),2)*sin(theta3)*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2)) - cos(psi3)*cos(theta3)*(cos(psi2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) - sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi1)*cos(theta2)*sin(theta1));
    double J1_6 = ((pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2))*(pow(cos(psi3),2) - pow(sin(psi3),2) - pow(cos(psi3),2)*cos(theta3) + cos(theta3)*pow(sin(psi3),2)) + (2*cos(psi3)*sin(psi3) - 2*cos(psi3)*cos(theta3)*sin(psi3))*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2)) + sin(psi3)*sin(theta3)*(cos(psi2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) - sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi1)*cos(theta2)*sin(theta1));
    double J2_1 = (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*(pow(sin(psi1),2)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - cos(psi1)*sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(theta1)*sin(psi1)*sin(psi2)*sin(theta2)) - (cos(theta3)*pow(cos(psi3),2) + pow(sin(psi3),2))*(cos(psi1)*sin(psi1)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - pow(sin(psi1),2)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*cos(theta1)*sin(psi1)*sin(theta2)) + cos(psi3)*sin(theta3)*(pow(sin(psi1),2)*sin(psi2)*sin(theta1)*sin(theta2) - cos(theta1)*cos(theta2)*sin(psi1) + cos(psi1)*cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2));
    double J2_2 = (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*((pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2))*(2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1)) - (cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) + cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - (cos(theta3)*pow(cos(psi3),2) + pow(sin(psi3),2))*((cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2))*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) - (2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2)) + cos(psi3)*sin(theta3)*(cos(psi2)*sin(theta2)*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) + sin(psi2)*sin(theta2)*(2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1)) - cos(psi1)*cos(theta2)*sin(theta1));
    double J2_3 = (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*(pow(sin(psi2),2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) - cos(psi2)*sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(theta2)*sin(psi1)*sin(psi2)*sin(theta1)) - (cos(theta3)*pow(cos(psi3),2) + pow(sin(psi3),2))*(cos(psi2)*sin(psi2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) - pow(cos(psi2),2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi2)*cos(theta2)*sin(psi1)*sin(theta1)) + cos(psi3)*sin(theta3)*(sin(psi1)*sin(theta1)*sin(theta2) - cos(theta2)*sin(psi2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) + cos(psi2)*cos(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)));
    double J2_4 = (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*((pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2)) - (cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) + cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)) - (cos(theta3)*pow(cos(psi3),2) + pow(sin(psi3),2))*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) - sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - cos(psi3)*sin(theta3)*(cos(psi2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) + sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)));
    double J2_5 = pow(cos(psi3),2)*sin(theta3)*((cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)) - cos(psi3)*cos(theta3)*(cos(theta2)*sin(psi1)*sin(theta1) + sin(psi2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) - cos(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))) - cos(psi3)*sin(psi3)*sin(theta3)*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2));
    double J2_6 = sin(psi3)*sin(theta3)*(cos(theta2)*sin(psi1)*sin(theta1) + sin(psi2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) - cos(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))) - (2*cos(psi3)*sin(psi3) - 2*cos(psi3)*cos(theta3)*sin(psi3))*((cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)) - ((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2))*(pow(cos(psi3),2) - pow(sin(psi3),2) - pow(cos(psi3),2)*cos(theta3) + cos(theta3)*pow(sin(psi3),2));
    double J3_1 = (cos(theta3)*pow(cos(psi3),2) + pow(sin(psi3),2))*(cos(psi2)*sin(theta1)*sin(theta2) - cos(psi1)*cos(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) + cos(theta1)*sin(psi1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))) - (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*(sin(psi2)*sin(theta1)*sin(theta2) - cos(theta1)*sin(psi1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) + cos(psi1)*cos(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))) + cos(psi3)*sin(theta3)*(cos(theta2)*sin(theta1) + cos(psi1)*cos(psi2)*cos(theta1)*sin(theta2) + cos(theta1)*sin(psi1)*sin(psi2)*sin(theta2));
    double J3_2 = (cos(theta3)*pow(cos(psi3),2) + pow(sin(psi3),2))*(sin(psi1)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) + cos(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))) + (cos(psi1)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) + sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)))*(cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3)) + cos(psi3)*sin(theta3)*(cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2) - cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2));
    double J3_3 = (cos(theta3)*pow(cos(psi3),2) + pow(sin(psi3),2))*(cos(psi1)*pow(cos(psi2),2)*sin(theta1)*sin(theta2) - cos(psi2)*cos(theta1)*cos(theta2) + cos(psi2)*sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*(sin(psi1)*pow(sin(psi2),2)*sin(theta1)*sin(theta2) - cos(theta1)*cos(theta2)*sin(psi2) + cos(psi1)*cos(psi2)*sin(psi2)*sin(theta1)*sin(theta2)) + cos(psi3)*sin(theta3)*(cos(theta1)*sin(theta2) + cos(psi1)*cos(psi2)*cos(theta2)*sin(theta1) + cos(theta2)*sin(psi1)*sin(psi2)*sin(theta1));
    double J3_4 = (cos(theta3)*pow(cos(psi3),2) + pow(sin(psi3),2))*(cos(theta1)*sin(psi2)*sin(theta2) + sin(psi1)*sin(theta1)*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) - cos(psi1)*sin(theta1)*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2))) - (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*(cos(psi1)*sin(theta1)*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) + sin(psi1)*sin(theta1)*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2)) - cos(psi2)*cos(theta1)*sin(theta2)) - cos(psi3)*sin(theta3)*(cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2) - cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2));
    double J3_5 = cos(psi3)*cos(theta3)*(cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2) - cos(theta1)*cos(theta2) + sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) + pow(cos(psi3),2)*sin(theta3)*(cos(psi1)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*cos(theta1)*sin(theta2)) + cos(psi3)*sin(psi3)*sin(theta3)*(cos(theta1)*sin(psi2)*sin(theta2) + sin(psi1)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - cos(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)));
    double J3_6 = (cos(theta1)*sin(psi2)*sin(theta2) + sin(psi1)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - cos(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)))*(pow(cos(psi3),2) - pow(sin(psi3),2) - pow(cos(psi3),2)*cos(theta3) + cos(theta3)*pow(sin(psi3),2)) - (2*cos(psi3)*sin(psi3) - 2*cos(psi3)*cos(theta3)*sin(psi3))*(cos(psi1)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*cos(theta1)*sin(theta2)) - sin(psi3)*sin(theta3)*(cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2) - cos(theta1)*cos(theta2) + sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2));
    double J4_1 = (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*(pow(cos(psi1),2)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - cos(psi1)*sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*cos(psi2)*cos(theta1)*sin(theta2)) - (pow(cos(psi3),2) + cos(theta3)*pow(sin(psi3),2))*(cos(psi1)*sin(psi1)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - pow(cos(psi1),2)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*cos(theta1)*sin(psi2)*sin(theta2)) + sin(psi3)*sin(theta3)*(pow(cos(psi1),2)*cos(psi2)*sin(theta1)*sin(theta2) - cos(psi1)*cos(theta1)*cos(theta2) + cos(psi1)*sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2));
    double J4_2 = sin(psi3)*sin(theta3)*(cos(theta2)*sin(psi1)*sin(theta1) + sin(psi2)*sin(theta2)*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) - cos(psi2)*sin(theta2)*(2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1))) - (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*((cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2))*(2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1)) + (cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) + cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)) - (pow(cos(psi3),2) + cos(theta3)*pow(sin(psi3),2))*((2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2))*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) - sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2));
    double J4_3 = (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*(pow(cos(psi2),2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) - cos(psi2)*sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi1)*cos(psi2)*cos(theta2)*sin(theta1)) - (pow(cos(psi3),2) + cos(theta3)*pow(sin(psi3),2))*(cos(psi2)*sin(psi2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) - pow(sin(psi2),2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi1)*cos(theta2)*sin(psi2)*sin(theta1)) + sin(psi3)*sin(theta3)*(cos(psi1)*sin(theta1)*sin(theta2) - cos(psi2)*cos(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) + cos(theta2)*sin(psi2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)));
    double J4_4 = sin(psi3)*sin(theta3)*(sin(psi2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) + cos(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))) - (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*((cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2)) + (cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) + cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - (pow(cos(psi3),2) + cos(theta3)*pow(sin(psi3),2))*((cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) - (cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2));
    double J4_5 = pow(sin(psi3),2)*sin(theta3)*((pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - cos(theta3)*sin(psi3)*(cos(psi2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) - sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi1)*cos(theta2)*sin(theta1)) - cos(psi3)*sin(psi3)*sin(theta3)*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2));
    double J4_6 = (2*cos(psi3)*sin(psi3) - 2*cos(psi3)*cos(theta3)*sin(psi3))*((pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - ((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2))*(pow(cos(psi3),2) - pow(sin(psi3),2) - pow(cos(psi3),2)*cos(theta3) + cos(theta3)*pow(sin(psi3),2)) - cos(psi3)*sin(theta3)*(cos(psi2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) - sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi1)*cos(theta2)*sin(theta1));
    double J5_1 = (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*(cos(psi1)*sin(psi1)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - pow(sin(psi1),2)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*cos(theta1)*sin(psi1)*sin(theta2)) - (pow(cos(psi3),2) + cos(theta3)*pow(sin(psi3),2))*(pow(sin(psi1),2)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - cos(psi1)*sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(theta1)*sin(psi1)*sin(psi2)*sin(theta2)) + sin(psi3)*sin(theta3)*(pow(sin(psi1),2)*sin(psi2)*sin(theta1)*sin(theta2) - cos(theta1)*cos(theta2)*sin(psi1) + cos(psi1)*cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2));
    double J5_2 = (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*((cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2))*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) - (2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2)) - (pow(cos(psi3),2) + cos(theta3)*pow(sin(psi3),2))*((pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2))*(2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1)) - (cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) + cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) + sin(psi3)*sin(theta3)*(cos(psi2)*sin(theta2)*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) + sin(psi2)*sin(theta2)*(2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1)) - cos(psi1)*cos(theta2)*sin(theta1));
    double J5_3 = (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*(cos(psi2)*sin(psi2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) - pow(cos(psi2),2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi2)*cos(theta2)*sin(psi1)*sin(theta1)) - (pow(cos(psi3),2) + cos(theta3)*pow(sin(psi3),2))*(pow(sin(psi2),2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) - cos(psi2)*sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(theta2)*sin(psi1)*sin(psi2)*sin(theta1)) + sin(psi3)*sin(theta3)*(sin(psi1)*sin(theta1)*sin(theta2) - cos(theta2)*sin(psi2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) + cos(psi2)*cos(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)));
    double J5_4 = (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) - sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - (pow(cos(psi3),2) + cos(theta3)*pow(sin(psi3),2))*((pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2)) - (cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) + cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)) - sin(psi3)*sin(theta3)*(cos(psi2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) + sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)));
    double J5_5 = cos(psi3)*sin(psi3)*sin(theta3)*((cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)) - pow(sin(psi3),2)*sin(theta3)*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - cos(theta3)*sin(psi3)*(cos(theta2)*sin(psi1)*sin(theta1) + sin(psi2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) - cos(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)));
    double J5_6 = ((cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2))*(pow(cos(psi3),2) - pow(sin(psi3),2) - pow(cos(psi3),2)*cos(theta3) + cos(theta3)*pow(sin(psi3),2)) - (2*cos(psi3)*sin(psi3) - 2*cos(psi3)*cos(theta3)*sin(psi3))*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - cos(psi3)*sin(theta3)*(cos(theta2)*sin(psi1)*sin(theta1) + sin(psi2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) - cos(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)));
    double J6_1 = (pow(cos(psi3),2) + cos(theta3)*pow(sin(psi3),2))*(sin(psi2)*sin(theta1)*sin(theta2) - cos(theta1)*sin(psi1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) + cos(psi1)*cos(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))) - (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*(cos(psi2)*sin(theta1)*sin(theta2) - cos(psi1)*cos(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) + cos(theta1)*sin(psi1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))) + sin(psi3)*sin(theta3)*(cos(theta2)*sin(theta1) + cos(psi1)*cos(psi2)*cos(theta1)*sin(theta2) + cos(theta1)*sin(psi1)*sin(psi2)*sin(theta2));
    double J6_2 = sin(psi3)*sin(theta3)*(cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2) - cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)) - (sin(psi1)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) + cos(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)))*(cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3)) - (pow(cos(psi3),2) + cos(theta3)*pow(sin(psi3),2))*(cos(psi1)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) + sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)));
    double J6_3 = (pow(cos(psi3),2) + cos(theta3)*pow(sin(psi3),2))*(sin(psi1)*pow(sin(psi2),2)*sin(theta1)*sin(theta2) - cos(theta1)*cos(theta2)*sin(psi2) + cos(psi1)*cos(psi2)*sin(psi2)*sin(theta1)*sin(theta2)) - (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*(cos(psi1)*pow(cos(psi2),2)*sin(theta1)*sin(theta2) - cos(psi2)*cos(theta1)*cos(theta2) + cos(psi2)*sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) + sin(psi3)*sin(theta3)*(cos(theta1)*sin(theta2) + cos(psi1)*cos(psi2)*cos(theta2)*sin(theta1) + cos(theta2)*sin(psi1)*sin(psi2)*sin(theta1));
    double J6_4 = (pow(cos(psi3),2) + cos(theta3)*pow(sin(psi3),2))*(cos(psi1)*sin(theta1)*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) + sin(psi1)*sin(theta1)*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2)) - cos(psi2)*cos(theta1)*sin(theta2)) - (cos(psi3)*sin(psi3) - cos(psi3)*cos(theta3)*sin(psi3))*(cos(theta1)*sin(psi2)*sin(theta2) + sin(psi1)*sin(theta1)*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) - cos(psi1)*sin(theta1)*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2))) - sin(psi3)*sin(theta3)*(cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2) - cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2));
    double J6_5 = cos(theta3)*sin(psi3)*(cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2) - cos(theta1)*cos(theta2) + sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) + pow(sin(psi3),2)*sin(theta3)*(cos(theta1)*sin(psi2)*sin(theta2) + sin(psi1)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - cos(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))) + cos(psi3)*sin(psi3)*sin(theta3)*(cos(psi1)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*cos(theta1)*sin(theta2));
    double J6_6 = (cos(psi1)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*cos(theta1)*sin(theta2))*(pow(cos(psi3),2) - pow(sin(psi3),2) - pow(cos(psi3),2)*cos(theta3) + cos(theta3)*pow(sin(psi3),2)) + (2*cos(psi3)*sin(psi3) - 2*cos(psi3)*cos(theta3)*sin(psi3))*(cos(theta1)*sin(psi2)*sin(theta2) + sin(psi1)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - cos(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))) + cos(psi3)*sin(theta3)*(cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2) - cos(theta1)*cos(theta2) + sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2));
    double J7_1 = (L1*cos(psi1)*cos(theta1))/pow(theta1,2) - ((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3)*(cos(psi1)*sin(psi1)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - pow(cos(psi1),2)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*cos(theta1)*sin(psi2)*sin(theta2)) - (L1*cos(psi1))/pow(theta1,2) - pow(cos(psi1),2)*sin(theta1)*((L2*cos(psi2))/theta2 - (L2*cos(psi2)*cos(theta2))/theta2) - ((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3)*(pow(cos(psi1),2)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - cos(psi1)*sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*cos(psi2)*cos(theta1)*sin(theta2)) + (L1*cos(psi1)*sin(theta1))/theta1 - (L3*sin(theta3)*(pow(cos(psi1),2)*cos(psi2)*sin(theta1)*sin(theta2) - cos(psi1)*cos(theta1)*cos(theta2) + cos(psi1)*sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)))/theta3 - cos(psi1)*sin(psi1)*sin(theta1)*((L2*sin(psi2))/theta2 - (L2*cos(theta2)*sin(psi2))/theta2) + (L2*cos(psi1)*cos(theta1)*sin(theta2))/theta2;
    double J7_2 = ((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3)*((cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2))*(2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1)) + (cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) + cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)) - ((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3)*((2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2))*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) - sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - ((L2*sin(psi2))/theta2 - (L2*cos(theta2)*sin(psi2))/theta2)*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) + (2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1))*((L2*cos(psi2))/theta2 - (L2*cos(psi2)*cos(theta2))/theta2) - (L1*sin(psi1))/theta1 + (L1*cos(theta1)*sin(psi1))/theta1 - (L3*sin(theta3)*(cos(theta2)*sin(psi1)*sin(theta1) + sin(psi2)*sin(theta2)*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) - cos(psi2)*sin(theta2)*(2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1))))/theta3 - (L2*sin(psi1)*sin(theta1)*sin(theta2))/theta2;
    double J7_3 = (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*((L2*cos(psi2)*cos(theta2))/pow(theta2,2) - (L2*cos(psi2))/pow(theta2,2) + (L2*cos(psi2)*sin(theta2))/theta2) - ((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3)*(pow(cos(psi2),2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) - cos(psi2)*sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi1)*cos(psi2)*cos(theta2)*sin(theta1)) - (cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*((L2*cos(theta2)*sin(psi2))/pow(theta2,2) - (L2*sin(psi2))/pow(theta2,2) + (L2*sin(psi2)*sin(theta2))/theta2) - ((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3)*(cos(psi2)*sin(psi2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) - pow(sin(psi2),2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi1)*cos(theta2)*sin(psi2)*sin(theta1)) - (L3*sin(theta3)*(cos(psi1)*sin(theta1)*sin(theta2) - cos(psi2)*cos(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) + cos(theta2)*sin(psi2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))))/theta3 + (L2*cos(psi1)*cos(theta2)*sin(theta1))/theta2 - (L2*cos(psi1)*sin(theta1)*sin(theta2))/pow(theta2,2);
    double J7_4 = ((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3)*((cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2)) + (cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) + cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - ((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3)*((cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) - (cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2)) - (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*((L2*sin(psi2))/theta2 - (L2*cos(theta2)*sin(psi2))/theta2) - (cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*((L2*cos(psi2))/theta2 - (L2*cos(psi2)*cos(theta2))/theta2) - (L3*sin(theta3)*(sin(psi2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) + cos(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))))/theta3;
    double J7_5 = ((L3*cos(psi3)*cos(theta3))/pow(theta3,2) - (L3*cos(psi3))/pow(theta3,2) + (L3*cos(psi3)*sin(theta3))/theta3)*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2)) - ((L3*cos(theta3)*sin(psi3))/pow(theta3,2) - (L3*sin(psi3))/pow(theta3,2) + (L3*sin(psi3)*sin(theta3))/theta3)*((pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) + (L3*cos(theta3)*(cos(psi2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) - sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi1)*cos(theta2)*sin(theta1)))/theta3 - (L3*sin(theta3)*(cos(psi2)*sin(theta2)*(cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2)) - sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi1)*cos(theta2)*sin(theta1)))/pow(theta3,2);
    double J7_6 = - ((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3)*((pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - ((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3)*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (cos(theta1)*pow(cos(psi1),2) + pow(sin(psi1),2))*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2));
    double J8_1 = (L1*cos(theta1)*sin(psi1))/pow(theta1,2) - ((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3)*(pow(sin(psi1),2)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - cos(psi1)*sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(theta1)*sin(psi1)*sin(psi2)*sin(theta2)) - (L1*sin(psi1))/pow(theta1,2) - pow(sin(psi1),2)*sin(theta1)*((L2*sin(psi2))/theta2 - (L2*cos(theta2)*sin(psi2))/theta2) - ((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3)*(cos(psi1)*sin(psi1)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - pow(sin(psi1),2)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*cos(theta1)*sin(psi1)*sin(theta2)) + (L1*sin(psi1)*sin(theta1))/theta1 - (L3*sin(theta3)*(pow(sin(psi1),2)*sin(psi2)*sin(theta1)*sin(theta2) - cos(theta1)*cos(theta2)*sin(psi1) + cos(psi1)*cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)))/theta3 - cos(psi1)*sin(psi1)*sin(theta1)*((L2*cos(psi2))/theta2 - (L2*cos(psi2)*cos(theta2))/theta2) + (L2*cos(theta1)*sin(psi1)*sin(theta2))/theta2;
    double J8_2 = (L1*cos(psi1))/theta1 - ((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3)*((pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2))*(2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1)) - (cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) + cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - ((L2*cos(psi2))/theta2 - (L2*cos(psi2)*cos(theta2))/theta2)*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) - (2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1))*((L2*sin(psi2))/theta2 - (L2*cos(theta2)*sin(psi2))/theta2) - ((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3)*((cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2))*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) - (2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2)) - (L1*cos(psi1)*cos(theta1))/theta1 - (L3*sin(theta3)*(cos(psi2)*sin(theta2)*(pow(cos(psi1),2) - pow(sin(psi1),2) - pow(cos(psi1),2)*cos(theta1) + cos(theta1)*pow(sin(psi1),2)) + sin(psi2)*sin(theta2)*(2*cos(psi1)*sin(psi1) - 2*cos(psi1)*cos(theta1)*sin(psi1)) - cos(psi1)*cos(theta2)*sin(theta1)))/theta3 + (L2*cos(psi1)*sin(theta1)*sin(theta2))/theta2;
    double J8_3 = (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*((L2*cos(theta2)*sin(psi2))/pow(theta2,2) - (L2*sin(psi2))/pow(theta2,2) + (L2*sin(psi2)*sin(theta2))/theta2) - ((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3)*(pow(sin(psi2),2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) - cos(psi2)*sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(theta2)*sin(psi1)*sin(psi2)*sin(theta1)) - ((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3)*(cos(psi2)*sin(psi2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) - pow(cos(psi2),2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + cos(psi2)*cos(theta2)*sin(psi1)*sin(theta1)) - (cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*((L2*cos(psi2)*cos(theta2))/pow(theta2,2) - (L2*cos(psi2))/pow(theta2,2) + (L2*cos(psi2)*sin(theta2))/theta2) - (L3*sin(theta3)*(sin(psi1)*sin(theta1)*sin(theta2) - cos(theta2)*sin(psi2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) + cos(psi2)*cos(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))))/theta3 + (L2*cos(theta2)*sin(psi1)*sin(theta1))/theta2 - (L2*sin(psi1)*sin(theta1)*sin(theta2))/pow(theta2,2);
    double J8_4 = (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*((L2*cos(psi2))/theta2 - (L2*cos(psi2)*cos(theta2))/theta2) - ((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3)*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) - sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - ((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3)*((pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2)) - (cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) + cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)) + (cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*((L2*sin(psi2))/theta2 - (L2*cos(theta2)*sin(psi2))/theta2) + (L3*sin(theta3)*(cos(psi2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) + sin(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))))/theta3;
    double J8_5 = ((L3*cos(theta3)*sin(psi3))/pow(theta3,2) - (L3*sin(psi3))/pow(theta3,2) + (L3*sin(psi3)*sin(theta3))/theta3)*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) - ((L3*cos(psi3)*cos(theta3))/pow(theta3,2) - (L3*cos(psi3))/pow(theta3,2) + (L3*cos(psi3)*sin(theta3))/theta3)*((cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)) + (L3*cos(theta3)*(cos(theta2)*sin(psi1)*sin(theta1) + sin(psi2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) - cos(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))))/theta3 - (L3*sin(theta3)*(cos(theta2)*sin(psi1)*sin(theta1) + sin(psi2)*sin(theta2)*(pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2)) - cos(psi2)*sin(theta2)*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))))/pow(theta3,2);
    double J8_6 = ((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3)*((cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) + ((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3)*((cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2))*(cos(psi1)*sin(psi1) - cos(psi1)*cos(theta1)*sin(psi1)) + (pow(cos(psi1),2) + cos(theta1)*pow(sin(psi1),2))*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2));
    double J9_1 = ((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3)*(cos(psi2)*sin(theta1)*sin(theta2) - cos(psi1)*cos(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) + cos(theta1)*sin(psi1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))) + ((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3)*(sin(psi2)*sin(theta1)*sin(theta2) - cos(theta1)*sin(psi1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) + cos(psi1)*cos(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2))) - cos(theta1)*sin(psi1)*((L2*sin(psi2))/theta2 - (L2*cos(theta2)*sin(psi2))/theta2) + (L1*cos(theta1))/theta1 - (L1*sin(theta1))/pow(theta1,2) - cos(psi1)*cos(theta1)*((L2*cos(psi2))/theta2 - (L2*cos(psi2)*cos(theta2))/theta2) - (L2*sin(theta1)*sin(theta2))/theta2 - (L3*sin(theta3)*(cos(theta2)*sin(theta1) + cos(psi1)*cos(psi2)*cos(theta1)*sin(theta2) + cos(theta1)*sin(psi1)*sin(psi2)*sin(theta2)))/theta3;
    double J9_2 = (sin(psi1)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) + cos(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)))*((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3) - (cos(psi1)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) + sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)))*((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3) + sin(psi1)*sin(theta1)*((L2*cos(psi2))/theta2 - (L2*cos(psi2)*cos(theta2))/theta2) - cos(psi1)*sin(theta1)*((L2*sin(psi2))/theta2 - (L2*cos(theta2)*sin(psi2))/theta2) - (L3*sin(theta3)*(cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2) - cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)))/theta3;
    double J9_3 = ((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3)*(cos(psi1)*pow(cos(psi2),2)*sin(theta1)*sin(theta2) - cos(psi2)*cos(theta1)*cos(theta2) + cos(psi2)*sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)) + ((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3)*(sin(psi1)*pow(sin(psi2),2)*sin(theta1)*sin(theta2) - cos(theta1)*cos(theta2)*sin(psi2) + cos(psi1)*cos(psi2)*sin(psi2)*sin(theta1)*sin(theta2)) - cos(psi1)*sin(theta1)*((L2*cos(psi2)*cos(theta2))/pow(theta2,2) - (L2*cos(psi2))/pow(theta2,2) + (L2*cos(psi2)*sin(theta2))/theta2) - sin(psi1)*sin(theta1)*((L2*cos(theta2)*sin(psi2))/pow(theta2,2) - (L2*sin(psi2))/pow(theta2,2) + (L2*sin(psi2)*sin(theta2))/theta2) + (L2*cos(theta1)*cos(theta2))/theta2 - (L2*cos(theta1)*sin(theta2))/pow(theta2,2) - (L3*sin(theta3)*(cos(theta1)*sin(theta2) + cos(psi1)*cos(psi2)*cos(theta2)*sin(theta1) + cos(theta2)*sin(psi1)*sin(psi2)*sin(theta1)))/theta3;
    double J9_4 = ((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3)*(cos(theta1)*sin(psi2)*sin(theta2) + sin(psi1)*sin(theta1)*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) - cos(psi1)*sin(theta1)*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2))) + ((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3)*(cos(psi1)*sin(theta1)*(pow(cos(psi2),2) - pow(sin(psi2),2) - pow(cos(psi2),2)*cos(theta2) + cos(theta2)*pow(sin(psi2),2)) + sin(psi1)*sin(theta1)*(2*cos(psi2)*sin(psi2) - 2*cos(psi2)*cos(theta2)*sin(psi2)) - cos(psi2)*cos(theta1)*sin(theta2)) - sin(psi1)*sin(theta1)*((L2*cos(psi2))/theta2 - (L2*cos(psi2)*cos(theta2))/theta2) + cos(psi1)*sin(theta1)*((L2*sin(psi2))/theta2 - (L2*cos(theta2)*sin(psi2))/theta2) + (L3*sin(theta3)*(cos(psi1)*sin(psi2)*sin(theta1)*sin(theta2) - cos(psi2)*sin(psi1)*sin(theta1)*sin(theta2)))/theta3;
    double J9_5 = (L3*sin(theta3)*(cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2) - cos(theta1)*cos(theta2) + sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)))/pow(theta3,2) - (cos(theta1)*sin(psi2)*sin(theta2) + sin(psi1)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - cos(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)))*((L3*cos(theta3)*sin(psi3))/pow(theta3,2) - (L3*sin(psi3))/pow(theta3,2) + (L3*sin(psi3)*sin(theta3))/theta3) - (L3*cos(theta3)*(cos(psi1)*cos(psi2)*sin(theta1)*sin(theta2) - cos(theta1)*cos(theta2) + sin(psi1)*sin(psi2)*sin(theta1)*sin(theta2)))/theta3 - (cos(psi1)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*cos(theta1)*sin(theta2))*((L3*cos(psi3)*cos(theta3))/pow(theta3,2) - (L3*cos(psi3))/pow(theta3,2) + (L3*cos(psi3)*sin(theta3))/theta3);
    double J9_6 = ((L3*sin(psi3))/theta3 - (L3*cos(theta3)*sin(psi3))/theta3)*(cos(psi1)*sin(theta1)*(cos(theta2)*pow(cos(psi2),2) + pow(sin(psi2),2)) - sin(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)) + cos(psi2)*cos(theta1)*sin(theta2)) - ((L3*cos(psi3))/theta3 - (L3*cos(psi3)*cos(theta3))/theta3)*(cos(theta1)*sin(psi2)*sin(theta2) + sin(psi1)*sin(theta1)*(pow(cos(psi2),2) + cos(theta2)*pow(sin(psi2),2)) - cos(psi1)*sin(theta1)*(cos(psi2)*sin(psi2) - cos(psi2)*cos(theta2)*sin(psi2)));

    J << J1_1,J1_2,J1_3,J1_4,J1_5,J1_6,
         J2_1,J2_2,J2_3,J2_4,J2_5,J2_6,
         J3_1,J3_2,J3_3,J3_4,J3_5,J3_6,
         J4_1,J4_2,J4_3,J4_4,J4_5,J4_6,
         J5_1,J5_2,J5_3,J5_4,J5_5,J5_6,
         J6_1,J6_2,J6_3,J6_4,J6_5,J6_6,
         J7_1,J7_2,J7_3,J7_4,J7_5,J7_6,
         J8_1,J8_2,J8_3,J8_4,J8_5,J8_6,
         J9_1,J9_2,J9_3,J9_4,J9_5,J9_6;

    return J;
}

MatrixXd Kinematic_CX::pinv(const MatrixXd a){  
    double epsilon =  std::numeric_limits<double>::epsilon();
    Eigen::JacobiSVD<MatrixXd> svd(a ,ComputeThinU | ComputeThinV);  
    double tolerance = epsilon * std::max(a.cols(), a.rows()) *svd.singularValues().array().abs()(0);  
    return svd.matrixV() *  (svd.singularValues().array().abs() > tolerance).select(svd.singularValues().array().inverse(), 0).matrix().asDiagonal() * svd.matrixU().adjoint(); 
}